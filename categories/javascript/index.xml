<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on chapter31</title>
    <link>http://chapter31.com/categories/javascript/</link>
    <description>Recent content in Javascript on chapter31</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; &lt;a href=&#34;http://michaelsharman.com&#34;&gt;Michael Sharman&lt;/a&gt; 2017</copyright>
    <lastBuildDate>Mon, 16 Dec 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://chapter31.com/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Simple JSON prettify</title>
      <link>http://chapter31.com/2013/12/16/simple-json-prettify/</link>
      <pubDate>Mon, 16 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://chapter31.com/2013/12/16/simple-json-prettify/</guid>
      <description>I went looking for a quick and easy way to style JSON content for display in the browser and quickly came across this answer at stack overflow with a corresponding jsfiddle entry.
However the problem is that this is kinda broken, the output isn&amp;rsquo;t valid JSON because the keys aren&amp;rsquo;t quoted. It&amp;rsquo;s just outputting a JavaScript object intead. A quick fix (and slight refactor) to the JavaScript gave me what I needed, I couldn&amp;rsquo;t post on SO as I don&amp;rsquo;t have the reputation (yeah that&amp;rsquo;s annoying) so I&amp;rsquo;m posting here for reference and I forked the original JSFiddle.</description>
    </item>
    
    <item>
      <title>JSON undefined issues on IE8 and IE9</title>
      <link>http://chapter31.com/2012/11/21/json-undefined-issues-on-ie8-and-ie9/</link>
      <pubDate>Wed, 21 Nov 2012 05:48:57 +0000</pubDate>
      
      <guid>http://chapter31.com/2012/11/21/json-undefined-issues-on-ie8-and-ie9/</guid>
      <description>I had some issues today while testing in IE, where &amp;ldquo;JSON&amp;rdquo; was undefined. This was happening in IE8 and IE9, which is strange because the JSON functions are in those IE versions. The problem was IE&amp;rsquo;s compatibility view, which triggers rendering in sort-of-IE7 mode. Classy. This was making JSON undefined ;(
The usual fix for this is to add a meta tag to force IE to use &amp;ldquo;edge&amp;rdquo; (or a specific version if you like):</description>
    </item>
    
    <item>
      <title>jQuery UI dialog focus on first tabable element</title>
      <link>http://chapter31.com/2012/09/14/jquery-ui-dialog-focus-on-first-tabable-element/</link>
      <pubDate>Fri, 14 Sep 2012 06:27:29 +0000</pubDate>
      
      <guid>http://chapter31.com/2012/09/14/jquery-ui-dialog-focus-on-first-tabable-element/</guid>
      <description>I&amp;rsquo;ve been using the jQuery UI dialog for a project recently, one thing that bugged me though, was that upon opening a dialog the first tabable element always gets focussed. This can be:
 hyperlinks input boxes select boxes buttons textareas etc  An example of this is:
A quick way around this is to fire a blur() method, targeting the first tabable element type of your dialog. So if I open up a dialog window with an id of dialog, I can do:</description>
    </item>
    
    <item>
      <title>Timing synchronous JavaScript operations</title>
      <link>http://chapter31.com/2012/08/13/timing-synchronous-javascript-operations/</link>
      <pubDate>Mon, 13 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>http://chapter31.com/2012/08/13/timing-synchronous-javascript-operations/</guid>
      <description>There&amp;rsquo;s a cool little method on the console object that allows you to track how long an operation took to run. It&amp;rsquo;s called console.time.
Basically you just start a timer at the top of the code you want to time, like so:
console.time(&#39;timer-name&#39;); // your javascript goes here console.timeEnd(&#39;timer-name&#39;);  Each timer block should have a unique name (in the example above I called my timer &amp;lsquo;timer-name&amp;rsquo;), and you can have up to 10,000 timers running on a single page.</description>
    </item>
    
    <item>
      <title>jQuery tinyMCE issue with $.attr();</title>
      <link>http://chapter31.com/2012/07/04/jquery-tinymce-issue-with-attr/</link>
      <pubDate>Wed, 04 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>http://chapter31.com/2012/07/04/jquery-tinymce-issue-with-attr/</guid>
      <description>I had some strange behaviour with the jQuery verion of tinyMCE (3.4.6). Basically I was integrating the chosen library (which is build as a jQuery plugin), but it seems the $.attr(&amp;lsquo;id&amp;rsquo;) from within chosen.js was returning a JavaScript element reference instead of the value of the &amp;ldquo;id&amp;rdquo; field.

Some basic tracing showed the strange error:

The solution for me was moving to tinyMCE 3.5.4.1 (and jQuery 1.7.2, previously I was on 1.</description>
    </item>
    
    <item>
      <title>Adding Prototype methods to jQuery</title>
      <link>http://chapter31.com/2010/12/07/adding-prototype-methods-to-jquery/</link>
      <pubDate>Tue, 07 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>http://chapter31.com/2010/12/07/adding-prototype-methods-to-jquery/</guid>
      <description>We recently upgraded a project which was using the Prototype JavaScript framework to use jQuery and ran into a few methods which didn&amp;rsquo;t exist in jQuery at all.
A quick search gave us an easy solution; by adding a prototype property (not related to the Prototype framework) to String.prototype we can give every string in our codebase access to these methods as if they were part of the JavaScript spec (or the jQuery library).</description>
    </item>
    
    <item>
      <title>Extracting URL variables using JavaScript</title>
      <link>http://chapter31.com/2009/10/28/extracting-url-variables-using-javascript/</link>
      <pubDate>Wed, 28 Oct 2009 00:40:51 +0000</pubDate>
      
      <guid>http://chapter31.com/2009/10/28/extracting-url-variables-using-javascript/</guid>
      <description>Server side languages are cool in that they give you a nice associative array to access URL variables. ColdFusion has the URL scope, PHP has $_GET[] etc, but how do you get these values easily with JavaScript?
I came across a post over at Jake Munson&amp;rsquo;s blog which had just what I needed. Actually although Jakes solution was perfectly valid, I preferred a slight modification from one of the commenters which wrapped the entire URL string into an associative array so you can access the entire URL scope, as well as extracting a specific value via a key.</description>
    </item>
    
    <item>
      <title>Prototype/scriptaculous issue with Sortable.create()</title>
      <link>http://chapter31.com/2009/06/15/prototypescriptaculous-issue-with-sortablecreate/</link>
      <pubDate>Mon, 15 Jun 2009 05:33:29 +0000</pubDate>
      
      <guid>http://chapter31.com/2009/06/15/prototypescriptaculous-issue-with-sortablecreate/</guid>
      <description>I&amp;rsquo;ve been doing some custom sorting within FarCry using the prototype/scriptaculous libraries as they already exist in the FarCry framework by default.
I was having trouble getting the Sortable.create() to work properly and the main docs site for scriptaculous seems severely lacking in examples. Basically the &amp;ldquo;sorting&amp;rdquo; action was happening fine but no event was being fired &amp;ldquo;onUpdate&amp;rdquo;. No exception was being thrown, just that nothing was happening after the drag/drop.</description>
    </item>
    
    <item>
      <title>Passing extra parameters to Prototype observer handlers</title>
      <link>http://chapter31.com/2008/03/11/passing-extra-parameters-to-prototype-observer-handlers/</link>
      <pubDate>Tue, 11 Mar 2008 02:26:12 +0000</pubDate>
      
      <guid>http://chapter31.com/2008/03/11/passing-extra-parameters-to-prototype-observer-handlers/</guid>
      <description>Another tip from my Prototype travels&amp;hellip;
&amp;lsquo;Observers&amp;rsquo; let you create a listener for a user event, for example on a form submission you may want to run some client side validation before actually submitting the form.
Of course you can add &amp;lsquo;onsubmit()&amp;rsquo; in your  tag, but isn&amp;rsquo;t it much nicer to keep your markup clean of this type of thing?
In your dom:loaded observer you can &amp;lsquo;listen&amp;rsquo; for a form submission as follows:</description>
    </item>
    
    <item>
      <title>Showing and hiding elements with CSS and JavaScript</title>
      <link>http://chapter31.com/2008/03/10/showing-and-hiding-elements-with-css-and-javascript/</link>
      <pubDate>Mon, 10 Mar 2008 00:00:00 +0000</pubDate>
      
      <guid>http://chapter31.com/2008/03/10/showing-and-hiding-elements-with-css-and-javascript/</guid>
      <description>*** Note:** These examples reference the Prototype JavaScript framework.
Often I find that I want to load content onto a page but have its default view state as hidden until a user defined event makes it appear.
The problem is if I hide an element using a linked CSS file (with a class or Id style of {display:none;}) it seems I cannot show that element using either of the following JavaScript options:</description>
    </item>
    
    <item>
      <title>Taking advantage of DOM on ready and Event observers using Prototype.js</title>
      <link>http://chapter31.com/2008/01/23/taking-advantage-of-dom-on-ready-and-event-observers-using-prototypejs/</link>
      <pubDate>Wed, 23 Jan 2008 10:44:59 +0000</pubDate>
      
      <guid>http://chapter31.com/2008/01/23/taking-advantage-of-dom-on-ready-and-event-observers-using-prototypejs/</guid>
      <description>I&amp;rsquo;ve been doing some JavaScript development with Prototype over the last few days and it&amp;rsquo;s been interesting trying to do things that I know how to do in jQuery, but in Prototype.
One of the cool things I like with all these JavaScript frameworks is the easy way they allow you to execute code on &amp;lsquo;DOM Ready&amp;rsquo; (once the page markup has completed but before all the images etc have loaded).</description>
    </item>
    
    <item>
      <title>jQuery and SWFObject conflict</title>
      <link>http://chapter31.com/2007/09/28/jquery-and-swfobject-conflict/</link>
      <pubDate>Fri, 28 Sep 2007 01:27:24 +0000</pubDate>
      
      <guid>http://chapter31.com/2007/09/28/jquery-and-swfobject-conflict/</guid>
      <description>I experienced some strange behaviour today when building a site which was using jQuery and SWFObject. Our Flash files were loading ok and 99% of the javascript (using jQuery) was working fine.
The problem was found only in IE (sound familiar?) with the following code:
$(document).ready(function(){ $(&#39;#submitButton&#39;).click(function(){  When the &amp;lsquo;submitButton&amp;rsquo; was clicked, this function was not firing in IE. After some googling I found that there is a slight conflict with jQuery and SWFObject.</description>
    </item>
    
    <item>
      <title>The &#39;coolest&#39; DHTML calendar</title>
      <link>http://chapter31.com/2007/03/25/the-coolest-dhtml-calendar/</link>
      <pubDate>Sun, 25 Mar 2007 07:25:13 +0000</pubDate>
      
      <guid>http://chapter31.com/2007/03/25/the-coolest-dhtml-calendar/</guid>
      <description>As web developers we are often some of the first people to see the newer techniques and tools available for use in web applications. This can be great as we can then hurry off and implement these things into our new projects.
But of course there are still millions of older sites (which will no doubt still be around for years to come!) using old techniques and tools. Ugh!
One of the more common things you find is the age old popup calendar window which is SLOW and could be blocked by the numerous popup blockers out there today.</description>
    </item>
    
    <item>
      <title>Including js files from within js files</title>
      <link>http://chapter31.com/2006/12/07/including-js-files-from-within-js-files/</link>
      <pubDate>Thu, 07 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>http://chapter31.com/2006/12/07/including-js-files-from-within-js-files/</guid>
      <description>I&amp;rsquo;m working on an application which stores a lot of data in the application scope. Part of the data stored is a config CFC that has a method which loads &amp;lsquo;external assets&amp;rsquo; (javascript and css files etc) into the  of the html document via . I love that tag :)
My part in this application development is limited to a particular section only, but there was already a lot of external assets present in the header and things were getting very messy.</description>
    </item>
    
    <item>
      <title>When not to use this.form.submit()</title>
      <link>http://chapter31.com/2006/10/12/when-not-to-use-thisformsubmit/</link>
      <pubDate>Thu, 12 Oct 2006 00:00:00 +0000</pubDate>
      
      <guid>http://chapter31.com/2006/10/12/when-not-to-use-thisformsubmit/</guid>
      <description>So ok, I&amp;rsquo;ve run into this problem in the past where I&amp;rsquo;m using an onclick event to submit a form from a button control. When you click the button you get a nice little Javascript error stating:
 this.form.submit is not a function
 Bugger&amp;hellip;wtf?
This only seems to happen when you have a form element named &amp;ldquo;submit&amp;rdquo; already on your page, so the browser treats that &amp;ldquo;submit&amp;rdquo; element as an object which is of course NOT a function.</description>
    </item>
    
    <item>
      <title>Javascript function properties</title>
      <link>http://chapter31.com/2006/10/01/javascript-function-properties/</link>
      <pubDate>Sun, 01 Oct 2006 00:43:45 +0000</pubDate>
      
      <guid>http://chapter31.com/2006/10/01/javascript-function-properties/</guid>
      <description>Javascript is pretty cool and I&amp;rsquo;ll admit that I don&amp;rsquo;t get to do as much as I&amp;rsquo;d like with it. Today I&amp;rsquo;m going to briefly cover a few properties of any Javascript function which you can take advantage of:
 arguments callee arity  arguments The arguments property contains an array of input parameters which may be passed to the function. It can be used to determine how many variables are being passed in and what they are, without each argument being explicitly declared in the function.</description>
    </item>
    
    <item>
      <title>Javascript parseInt() quirk</title>
      <link>http://chapter31.com/2006/09/28/javascript-parseint-quirk/</link>
      <pubDate>Thu, 28 Sep 2006 07:45:35 +0000</pubDate>
      
      <guid>http://chapter31.com/2006/09/28/javascript-parseint-quirk/</guid>
      <description>I ran into a little quirk or &amp;lsquo;bug&amp;rsquo; today when using parseInt() with a string (input from a text box). Now as we all know parseInt() parses a string and returns an integer value.
The scenario: I was working on a legacy application where a user could pass a date to the server in 3 separate form fields (day, month and year); all text boxes. No nice little DHTML calendars here</description>
    </item>
    
    <item>
      <title>Trimming strings with Javascript</title>
      <link>http://chapter31.com/2006/09/19/trimming-strings-with-javascript/</link>
      <pubDate>Tue, 19 Sep 2006 23:23:59 +0000</pubDate>
      
      <guid>http://chapter31.com/2006/09/19/trimming-strings-with-javascript/</guid>
      <description>Ben Nadel has a nice post on trimming strings with javascript using regular expressions.
Note that the reg exp white space character &amp;lsquo;\s&amp;rsquo; is used to match:
 space tab horizontal tab vertical tab line break  Sample code below:
&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; // Trims the beginning and trailing white space from a string. function trim( strText ){ return( strText.replace(new RegExp(&amp;quot;^([s]+)|([s]+)$&amp;quot;, &amp;quot;gm&amp;quot;), &amp;quot;&amp;quot;) ); } // Trims the beinning white space from a string.</description>
    </item>
    
  </channel>
</rss>